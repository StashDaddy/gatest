# Github test action during pushes
# YML workflow reference: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: CI Push Test
on: [push]
jobs:
  php_check:
    name: PHP Checks
    runs-on: ubuntu-18.04
    #env:
    #  DB_USERNAME: root
    #  DB_PASSWORD: yii
    #  DB_CHARSET: utf8
    #services:
    strategy:
      fail-fast: false
      matrix:
        #php-versions: ['7.2', '7.4']
        php-versions: ['7.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Code sniffing with phpcs, phpmd, psalm
      # Static code analysis with phan, phpstan
      # Unit/Functional tests with phpunit, codeception
      # Required support tools: cs2pr - for output formatting from phpcs and phpstan
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, gd, imagick, zip, dom, mysql
          coverage: none #optional
          tools: codeception, phpunit, phpcs, phpmd, phan, phpstan, cs2pr

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      #- name: PHP Version
      #  run: php -v

      # Static Analyzer
      #- name: PHPStan  # https://github.com/phpstan/phpstan, https://phpstan.org/user-guide/
      #  #run: phpstan analyse . --error-format=checkstyle | cs2pr # Use this in a pull-request run only
      #  run: phpstan analyse -l 0 . --error-format=table # use loosest checks (8 is strictest)
      #  # To Consider: https://github.com/proget-hq/phpstan-yii2

      # Requires .phpcs.xml
      # Available standards:  MySource, PEAR, PSR1, PSR12, PSR2, Squiz and Zend (from phpcs -i)
      #- name: PHPCS # https://github.com/squizlabs/PHP_CodeSniffer, https://github.com/squizlabs/PHP_CodeSniffer/wiki
      #  if: ${{ always() }}
      ##  run: phpcs -q . --report=checkstyle | cs2pr --graceful-warnings  # Use this in a pull-request run only
      #  run: phpcs -q .

      # Static Analyzer
      # Requires .phan/config.php file
      #- name: PHPMD # https://phpmd.org, https://phpmd.org/documentation/
      #  if: ${{ always() }}
      #  run: phpmd --exclude *vendor/* . ansi cleancode,design,naming

      # Static Analyzer
      #- name: Phan # https://github.com/phan/phan, https://github.com/phan/phan/wiki/
      #  if: ${{ always() }}
      #  run: phan

      - name: get current directory
        run: pwd

      # Static Analyzer
      # Requires install via composer (composer require overtrue/phplint)
      - name: Install PHP-Lint via Composer # https://github.com/overtrue/phplint, https://github.com/michaelw90/PHP-Lint/commit/8c168c7ddac93344b4a5d32e41312ecf46b7f2a2
        if: ${{ always() }}
        run: mkdir phplint && cd phplint && composer require overtrue/phplint && ln -s ./vendor/bin/phplint /usr/local/bin/phplint && cd ..

      - name: PHP-Lint
        if: ${{ always() }}
        run: ./phplint/vendor/bin/phplint -n ./ --exclude=vendor

#      - name: Edit File
#        run: |
#          echo Test Content > /tmp/testfile.txt

#      - name: List Files
#        run: |
#          ls -lart /tmp

#      - name: File Content
#        run: |
#          cat /tmp/testfile.txt



