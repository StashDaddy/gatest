# Github test action during pushes
# YML workflow reference: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: CI Push Test
on: [push]
jobs:
  syntax_check:
    name: PHP Syntax Checking
    runs-on: ubuntu-18.04
    #env:
    #  DB_USERNAME: root
    #  DB_PASSWORD: yii
    #  DB_CHARSET: utf8
    #services:
    strategy:
      fail-fast: false
      matrix:
        #php-versions: ['7.2', '7.4']
        php-versions: ['7.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Code sniffing with phpcs, phpmd, psalm
      # Static code analysis with phan, phpstan
      # Unit/Functional tests with phpunit, codeception
      # Required support tools: cs2pr - for output formatting from phpcs and phpstan
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, gd, imagick, zip, dom, mysql
          coverage: none #optional
          tools: codeception, phpunit, phpcs, phpmd, psalm, phan, phpstan, cs2pr

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      #- name: PHP Version
      #  run: php -v

      - name: PHPStan  # https://github.com/phpstan/phpstan, https://phpstan.org/user-guide/
        #run: phpstan analyse . --error-format=checkstyle | cs2pr # Use this in a pull-request run only
        run: phpstan analyse -l 0 . --error-format=table # use loosest checks (8 is strictest)
        # To Consider: https://github.com/proget-hq/phpstan-yii2

      - name: Psalm Help
        run: psalm --help

      - name: PSalm  #https://psalm.dev, https://psalm.dev/
        run: psalm

      #- name: PHPCS
      #  run: phpcs

      - name: PHPMD #
        # run:

#      - name: Edit File
#        run: |
#          echo Test Content > /tmp/testfile.txt

#      - name: List Files
#        run: |
#          ls -lart /tmp

#      - name: File Content
#        run: |
#          cat /tmp/testfile.txt



